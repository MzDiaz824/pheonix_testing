/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQCTRIMD {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/fastqc_stats" },
            mode: 'copy',
            pattern: "*.{html,zip}"
        ]
    }

    withName: SPADES_LOCAL {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/Assembly" },
            mode: 'copy',
            pattern: "*.{scaffolds.fa.gz,contigs.fa.gz,transcripts.fa.gz,gene_clusters.fa.gz,assembly.gfa.gz,log}"
        ]
    }

    withName: FASTP_TRIMD {
        ext.args = '-r --cut_right_window_size 20 --cut_right_mean_quality 30 -l 50 -g -5 20 -3 20'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/fastp_trimd" },
            mode: 'copy',
            pattern: "*.{trim.fastq.gz,json,html,fail.fastq.gz,merged.fastq.gz}"
        ]
    }

    withName: FASTP_SINGLES {
        ext.args = '--disable_adapter_trimming'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/fastp_singles" },
            mode: 'copy',
            pattern: "*.{trim.fastq.gz,json,html,fail.fastq.gz,merged.fastq.gz}"
        ]
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

    withName: BUSCO {
        ext.args = '--mode protein'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/BUSCO" },
            mode: 'copy',
            pattern: "*.{txt,json,bam}"
        ]
    }

    withName: FASTANI {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/ANI" },
            mode: 'copy',
            pattern: "*.ani.txt"
        ]
    }
    withName: SRST2_TRIMD_AR {
        ext.args = '--forward _1.trim --reverse _2.trim --save_scores --report_all_consensus > srst2.log'
        ext.errorStrategy = { "ignore" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/srst2" },
            mode: 'copy',
            pattern: "*.{txt,pileup,bam}"
        ]
    }

    withName: KRAKEN2_TRIMD {
    ext.args = '--use-names '
    publishDir = [
            path: { "${params.outdir}/${meta.id}/kraken2_trimd" },
            mode: 'copy',
            pattern: "*{classified*,unclassified*,classifiedreads*,report.txt}"
        ]
    }

    withName: KRAKEN2_ASMBLD {
    ext.args = '--use-names'
    publishDir = [
            path: { "${params.outdir}/${meta.id}/kraken2_asmbld" },
            mode: 'copy',
            pattern: "*{classified*,unclassified*,classifiedreads*,report.txt}"
        ]
    }

    withName: GAMMA_HV {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/hyper_virulence" },
            mode: 'copy',
            pattern: "*.{gamma,psl,gff,fasta}"
        ]
    }

    withName: GAMMA_AR {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/gamma_ar" },
            mode: 'copy',
            pattern: "*.{gamma,psl,gff,fasta}"
        ]
    }

    withName: GAMMA_S {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/gamma_s" },
            mode: 'copy',
            pattern: "*.{gamma,psl,gff,fasta}"
        ]
    }

    withName: GAMMA_PREP {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/gamma_prep" },
            mode: 'copy',
            pattern: "*.scaffolds.fa"
        ]
    }

    withName: QUAST {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/quast" },
            mode: 'copy',
            pattern: "*.tsv"
        ]
    }
    withName: BBMAP_REFORMAT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/assemblies500plus" },
            mode: 'copy',
            pattern: "*.{scaffolds.fa.gz,log}"
        ]
    }

    withName: KRONA_KTIMPORTTAXONOMY {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/krona" },
            mode: 'copy',
            pattern: "*.html"
        ]
    }

    withName: KRONA_KTIMPORTTEXT {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/krona" },
            mode: 'copy',
            pattern: "*.html"
        ]
    }

    withName: BBMAP_BBDUK {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/removedAdapters" },
            mode: 'copy',
            pattern: "*.{fastq.gz,log}"
        ]
    }

    withName: MASH_SKETCH {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/ANI/mash_sketch" },
            mode: 'copy',
            pattern: "*.{msh,mash_stats}"
        ]
    }

    withName: MASH_DIST {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/ANI/mash_dist" },
            mode: 'copy',
            pattern: "*.txt"
        ]
    }

    withName: TOP_ANI {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/ANI/fastANI" },
            mode: 'copy',
            pattern: "*.txt"
        ]
    }

    withName: GET_REFS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/ANI/fastANI/refseqs" },
            mode: 'copy',
            pattern: "*.gna"
        ]
    }
    withName: MLST {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/mlst" },
            mode: 'copy',
            pattern: "*.tsv"
        ]
    }

}
